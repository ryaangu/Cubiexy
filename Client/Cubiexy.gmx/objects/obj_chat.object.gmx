<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize the chat
text          = "";
typing        = false;
holding       = false;
hovering      = false;
previous_text = "";
max_letters   = 70;

index    = 0;
draw_max = 14;
extra_y  = 0;

p = -160;

//Initialize the chat
chat_init();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Drag variables
dragPosY = 128;
dragPosX = (window_get_width() * 0.5) - 40;
dragPosYmin = 16;
dragPosYmax = 304;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Chat control

//Get input
typing ^= keyboard_check_pressed(vk_enter);

//React to input
if (room != rm_world) typing = false;

if (typing)
{
    //Set the text
    if (keyboard_string != "")
        text = keyboard_string;
    else if (string_length(text) == 1 &amp;&amp; keyboard_string == "")
        text = "";
        
    //Text size control
    max_letters = 81 - string_length(string_keywords_remove(obj_player.name)) - 2; 
    
    //Text settings
    text = string_upper(text);
    text = string_copy(text, 1, max_letters);
    
    //Avoid # breaking lines
    text = string_replace_all(text, "#", "");
}
else
{
    //Check for message
    if (string_length(text) &gt; 0 &amp;&amp; string_replace_all(text, " ", "") != "")
    {
        //Get the command name
        var _command      = chat_command_split(text);
        var _command_name = _command[0];
        
        //Add the message
        if (!(is_chat_command(text) &amp;&amp; chat_command_exists(_command_name) &amp;&amp; have_command_permission(_command_name)))
            send_chat_world(string(obj_player.name) + ": " + string(text));
            
        //Check for command
        if (is_chat_command(text) &amp;&amp; chat_command_exists(_command_name))
            chat_execute_command(_command_name, _command);
            
        //Set previous text
        previous_text = text;
    }
    
    //Reset the text
    text            = "";
    keyboard_string = "";
}

//Index control
if (keyboard_check(vk_up))   index--;
if (keyboard_check(vk_down)) index++;

index = clamp(index, 0, (ds_list_size(global.chat_list) - 1) - draw_max);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the chat
var _draw_y = 270 - 15;

//Draw the chat GUI
if (typing)
    draw_sprite_shadow_ext(spr_chat_text, 1, 2, 10, p - 10);
else
    draw_sprite_shadow_ext(spr_chat_text, 0, 2, 10, p - 10);
    
//Draw the messages
for (var _index = ds_list_size(global.chat_list); _index &gt; -1; _index--)
{
    //Check for index
    if (_index &gt;= index &amp;&amp; _index &lt;= index + draw_max)
    {
        //Get the message
        var _message = global.chat_list[| _index];
        
        //Check for message variables
        _message = chat_check_variable(_message, "[FPS]", fps);
        
        //Draw the message
        draw_text_custom_ext(25, p + (20 + _draw_y - (sign(index) + 20)), _message, c_white, false, fnt_chat, 1);
        
        _draw_y -= 18;
    }
}

//Typing message
if (typing)
{
    //Check for message variables
    var _text = chat_check_variable(text, "[FPS]", fps);
      
    if (is_chat_command(_text))  
        draw_sprite_shadow_ext(spr_chat_input, 1, 2, 10, p + 10 + 270 + 10);
    else
        draw_sprite_shadow_ext(spr_chat_input, 0, 2, 10, p + 10 + 270 + 10);
        
    draw_text_custom_ext(25, p + 20 + 270, _text + "|", c_white, false, fnt_chat, 1);
    
    //Check for command
    if (is_chat_command(_text))
    {
        //Get the command name
        var _command = chat_command_split(text);
        var _command_name = _command[0];
        
        //Check for command name
        if (chat_command_exists(_command_name) &amp;&amp; have_command_permission(_command_name))
        {
            draw_sprite_shadow_ext(spr_chat_input, 0, 2, 10, p + 10 + 270 + 10 + 30);
            draw_text_custom_ext(25, p + 20 + 270 + 30, "~G" + chat_get_command(_command_name, COMMAND.INFORMATION), c_white, false, fnt_chat, 1);
        }
        else
        {
            draw_sprite_shadow_ext(spr_chat_input, 0, 2, 10, p + 10 + 270 + 10 + 30);
            draw_text_custom_ext(25, p + 20 + 270 + 30, "~RInvalid command.", c_white, false, fnt_chat, 1);
        }
        
        extra_y = 60;
    }
    else
    {
        extra_y = 30;
    }
}
else
{
    extra_y = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Drag proccess
gui_mouse_x = device_mouse_x_to_gui(0);
gui_mouse_y = device_mouse_y_to_gui(0);

if (point_in_rectangle(gui_mouse_x, gui_mouse_y, dragPosX-64, dragPosY-64, dragPosX+64, dragPosY+64))
{
    if (mouse_check_button(mb_left))
    {
        dragPosY = gui_mouse_y;
        dragPosY = clamp(dragPosY, dragPosYmin, dragPosYmax);
        holding  = true;
    }
    else
    {
        holding = false;
    }
    
    hovering = true;
    draw_sprite_shadow_ext(spr_chat_hold, 1, 2, dragPosX, dragPosY - 15 + extra_y);
}
else
{
    hovering = false;
    draw_sprite_shadow_ext(spr_chat_hold, 0, 2, dragPosX, dragPosY - 15 + extra_y);
}

p = dragPosY - 304;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set the text to the previous
if (typing)
{
    keyboard_string += previous_text;
    
    text = string_copy(keyboard_string, 1, max_letters);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
