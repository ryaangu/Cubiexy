<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_player_mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize the player

//Update the name
if (global.staff_permission)
    name = "~YSTAFF ~W"  + global.username + "~Y";
else
    name = "~YTESTER ~W"  + global.username + "~Y";

//Movement
hsp = 0;
vsp = 0;
grv = 0.6;

move_speed = 3.5;
jump_speed = 7.5;

jumps     = 0;
max_jumps = 1;

noclip = false;
update = true;

//Image
image_speed = 0.25;

//Create the camera
instance_create(0, 0, obj_camera);

//Get inputs
_key_left = false; _key_right = false; _key_jump = false; _key_up = false; _key_down = false; _key_attack = false;

//Sprite control
sprite_idle   = spr_shark_idle;
sprite_run    = spr_shark_run;
sprite_jump   = spr_shark_jump;
sprite_fall   = spr_shark_fall;
sprite_attack = spr_shark_attack;

//Update the player
alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy
send_player_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update the player
if (update) 
{
    send_player_update();
    update = false;
}

alarm[0] = 1.2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Player Movement

//Check for pause
if (!instance_exists(par_pause) &amp;&amp; !obj_chat.typing)
{
    //Get inputs
    _key_left   = keyboard_check(ord("A")) || keyboard_check(vk_left);
    _key_right  = keyboard_check(ord("D")) || keyboard_check(vk_right);
    _key_jump   = keyboard_check_pressed(ord("W")) || keyboard_check_pressed(vk_space) || keyboard_check_pressed(vk_up);
    _key_up     = keyboard_check(ord("W")) || keyboard_check(vk_space) || keyboard_check(vk_up);
    _key_down   = keyboard_check(ord("S")) || keyboard_check(vk_down);
    _key_attack = mouse_check_button_released(mb_left);
}    

//React to inputs
move = -_key_left + _key_right;
hsp = move * move_speed;

if (vsp &lt; 10) vsp += grv;

if (_key_jump &amp;&amp; jumps &lt; max_jumps)
{
    vsp = -jump_speed;
    jumps++;
}

if (jumps &gt; 0 &amp;&amp; (y == WORLD_HEIGHT - 17 || block_meeting(x, y + 1)))
    jumps = 0;
    
//Noclip
if (noclip)
{  
    //Movement
    if (((_key_up || _key_down) || (_key_left || _key_right)))
    {
        hsp = (-_key_left + _key_right) * (move_speed - 1);
        x += hsp;
        
        vsp = (-_key_up + _key_down) * (move_speed - 1);
        y += vsp;
    }
    
    //Image
    image_alpha = 0.50;
}
else
{
    //Image
    image_alpha = 1;
}
    
//Horizontal Collision
if (block_meeting(x + hsp, y) &amp;&amp; !(noclip &amp;&amp; ((_key_up || _key_down) || (_key_left || _key_right))))
{
    while (!block_meeting(x + sign(hsp), y))
        x += sign(hsp);
    hsp = 0;
}

//Move horizontally
x += hsp;

//Vertical Collision
if (block_meeting(x, y + vsp) &amp;&amp; !(noclip &amp;&amp; ((_key_up || _key_down) || (_key_left || _key_right))))
{
    while (!block_meeting(x, y + sign(vsp)))
        y += sign(vsp);
    vsp = 0;
}

//Move vertically
y += vsp;

//Clamp position
x = clamp(x, 14, WORLD_WIDTH  - 14);
y = clamp(y, 17, WORLD_HEIGHT - 17);

//Update the player
if (x != xprevious || y != yprevious)
    update = true;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Player Animation

//Movement animation
if (block_meeting(x, y + 1) || y == WORLD_HEIGHT - 17)
{
    if (sprite_index != sprite_attack &amp;&amp; (!image_index &gt;= 0 || !image_index &lt;= 4))
    {
        if (move != 0)
        {
            sprite_index = sprite_run;
        }
        else
            sprite_index = sprite_idle;
    }
}
else
{
    if (vsp &lt; 0)
        sprite_index = sprite_jump;
    else
        sprite_index = sprite_fall;
}

//Player direction
if (move != 0 &amp;&amp; image_xscale != move)
{
    image_xscale = move;
    update       = true;
}
 
//Editing animation   
if (sprite_index != sprite_attack &amp;&amp; _key_attack &amp;&amp; !obj_chat.hovering &amp;&amp; !obj_chat.holding &amp;&amp; !obj_chat.typing)
{
    sprite_index = sprite_attack;
    image_speed  = 0.27;
    update       = true;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision checks
if (block_meeting(x, y) &amp;&amp; !noclip)
{
    x      = WORLD_WIDTH/2;
    y      = 300;    
    update = true;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update name
if (global.staff_permission)
    name = "~YSTAFF ~W"  + global.username + "~Y";
else
    name = "~YTESTER ~W"  + global.username + "~Y";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="57">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var _layer = LAYER.BACKGROUND;

if (world_get_block(LAYER.BACKGROUND, mouse_x div BLOCK_SIZE, mouse_y div BLOCK_SIZE) != BLOCK.NULL)
    _layer = LAYER.FOREGROUND;
    
if (!obj_chat.hovering &amp;&amp; !obj_chat.holding &amp;&amp; !obj_chat.typing)
    send_world_set_block(global.world_name, _layer, mouse_x div BLOCK_SIZE, mouse_y div BLOCK_SIZE, irandom_range(BLOCK.GRASS, BLOCK.COUNT - 1));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var _layer = LAYER.FOREGROUND;

if (world_get_block(_layer, mouse_x div BLOCK_SIZE, mouse_y div BLOCK_SIZE) == BLOCK.NULL)
    _layer = LAYER.BACKGROUND;
   
if (!obj_chat.hovering &amp;&amp; !obj_chat.holding &amp;&amp; !obj_chat.typing) 
    send_world_set_block(global.world_name, _layer, mouse_x div BLOCK_SIZE, mouse_y div BLOCK_SIZE, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check for attack animation
if (sprite_index == sprite_attack)
{
    //Reset sprite
    sprite_index = sprite_idle;
    image_speed  = 0.25;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the player
draw_self();
player_render_name(name);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
