<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize the camera
target = obj_player;
follow_speed = 15;
scale = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Camera control

//Get window dimensions
var _window_width  = window_get_width() * 0.5,
    _window_height = window_get_height() * 0.5;
    
if (keyboard_check(vk_f1)) scale -= 0.5;
if (keyboard_check(vk_f2)) scale += 0.5;

//Clamp scale
scale = clamp(scale, 1, 3);

//Set the view dimensions
if (view_wview != ((_window_width * 0.5) * scale) || view_hview != ((_window_height * 0.5) * scale))
{
    //Set the view dimensions
    view_wview = ((_window_width  * 0.5) * scale);
    view_hview = ((_window_height * 0.5) * scale);
    
    //Clamp the view dimensions
    view_wview = clamp(view_wview, 1, (WORLD_WIDTH  * BLOCK_SIZE));
    view_hview = clamp(view_hview, 1, (WORLD_HEIGHT * BLOCK_SIZE));
}

//Check for target
if (instance_exists(target) &amp;&amp; !instance_exists(par_pause)) 
{
    //Move the camera to the target
    x += (target.x - x);
    y += (target.y - y);
    
    //Move the view positions
    view_xview = -(view_wview/2) + x;
    view_yview = -(view_hview/2) + y;
    
    //Clamp the view positions
    view_xview = clamp(view_xview, 0, (WORLD_WIDTH  * BLOCK_SIZE) - view_wview);
    view_yview = clamp(view_yview, 0, (WORLD_HEIGHT * BLOCK_SIZE) - view_hview);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
